@page "/"
@using Syncfusion.Blazor.Gantt
@using Syncfusion.Blazor.Data

@*Self referential data*@
<SfGantt DataSource="@TaskCollection" TValue="TaskData" Height="450px" Width="850px" AllowFiltering="true">
        <GanttTaskFields Id="TaskId" Name="TaskName" StartDate="StartDate" EndDate="EndDate" Duration="Duration"
                         Progress="Progress" ParentID="ParentId">
        </GanttTaskFields>
        <GanttTimelineSettings TimelineViewMode="TimelineViewMode.Month" TimelineUnitSize="200"></GanttTimelineSettings>
        <GanttEditSettings AllowEditing="true" Mode="EditMode.Dialog"></GanttEditSettings>
    </SfGantt>

@code {

    public class TaskData
    {
        public int TaskId { get; set; }
        public string TaskName { get; set; }
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
        public string Duration { get; set; }
        public int Progress { get; set; }
        public int? ParentId { get; set; }
    }

    public List<TaskData> TaskCollection { get; set; }

    public static List<TaskData> GetTaskCollection()
    {
        List<TaskData> Tasks = new List<TaskData>() {
        new TaskData() {
            TaskId = 1,
            TaskName = "Project initiation",
            StartDate = new DateTime(2020, 08, 02),
            EndDate = new DateTime(2020, 08, 21)
        },
        new TaskData() {
            TaskId = 2,
            TaskName = "Identify Site location",
            StartDate = new DateTime(2020, 08, 02),
            Duration = "0",
            Progress = 30,
            ParentId = 1
        },
        new TaskData() {
            TaskId = 3,
            TaskName = "Perform soil test",
            StartDate = new DateTime(2020, 08, 02),
            Duration = "4",
            Progress = 40,
            ParentId = 1
        },
        new TaskData() {
            TaskId = 4,
            TaskName = "Soil test approval",
            StartDate = new DateTime(2020, 08, 02),
            Duration = "0",
            Progress = 30,
            ParentId = 1
        },
        new TaskData() {
            TaskId = 5,
            TaskName = "Project estimation",
            StartDate = new DateTime(2020, 08, 02),
            EndDate = new DateTime(2020, 08, 21)
        },
        new TaskData() {
            TaskId = 6,
            TaskName = "Develop floor plan for estimation",
            StartDate = new DateTime(2020, 08, 04),
            Duration = "3",
            Progress = 30,
            ParentId = 5
        },
        new TaskData() {
            TaskId = 7,
            TaskName = "List materials",
            StartDate = new DateTime(2020, 08, 04),
            Duration = "3",
            Progress = 40,
            ParentId = 5
        },
        new TaskData() {
            TaskId = 8,
            TaskName = "Estimation approval",
            StartDate = new DateTime(2020, 08, 04),
            Duration = "0",
            Progress = 30,
            ParentId = 5
        }
    };
        return Tasks;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        this.TaskCollection = GetTaskCollection();
    }
}
